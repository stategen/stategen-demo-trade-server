/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mycompany.biz.domain.City;
import com.mycompany.biz.dao.CityDao;
import org.stategen.framework.ibatis.util.PageQueryUtils;
import org.stategen.framework.lite.PageList;

import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

/**
 * CityDao
 * <pre>
 * database table: city
 * database table comments: City
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 该类仅可以修改引用
 * </pre>
 */
public class CityDaoImpl  extends SqlMapClientDaoSupport implements CityDao {

	/**
	 * 
	 * sql:insert into city ( create_time , update_time , delete_flag , city_id , name , pycode , province_id , postcode , areacode ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0,?,?,?,?,?,?)
	 */
	public City insert(City city) throws DataAccessException {
		if(city == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
        getSqlMapClientTemplate().insert("insert.City.trade", city);
		return city;
	}

	/**
	 * 
	 * sql:UPDATE city SET delete_flag = 1 , update_time = CURRENT_TIMESTAMP(6) where delete_flag = 0 and city_id = ?
	 */
	public String delete(String cityId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("cityId",cityId);
        getSqlMapClientTemplate().update("delete.City.trade", params);
        return cityId;
	}

	/**
	 * 
	 * sql:UPDATE city SET update_time= CURRENT_TIMESTAMP(6) , name = ? , pycode = ? , province_id = ? , postcode = ? , areacode = ? where delete_flag = 0 and city_id = ?
	 */
	public City update(City city) throws DataAccessException {
		if(city == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
        getSqlMapClientTemplate().update("update.City.trade", city);
		return city;
	}

	/**
	 * 
	 * sql:select a.city_id, a.name, a.pycode, a.province_id, a.postcode, a.areacode, a.create_time, a.update_time, a.delete_flag from city a where a.delete_flag = 0 and a.city_id = ?
	 */
	public City getCityByCityId(String cityId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("cityId",cityId);
		return (City)getSqlMapClientTemplate().queryForObject("getCityByCityId.City.trade",params);
	}

	/**
	 * 
	 * sql:select a.city_id, a.name, a.pycode, a.province_id, a.postcode, a.areacode, a.create_time, a.update_time, a.delete_flag from city a where a.delete_flag = 0 and a.city_id=? and a.city_id in ( ? ) and a.name=? and a.name like CONCAT('%',?,'%') and a.pycode=? and a.pycode like CONCAT('%',?,'%') and a.province_id=? and a.province_id in ( ? ) and a.postcode=? and a.postcode like CONCAT('%',?,'%') and a.areacode=? and a.areacode like CONCAT('%',?,'%') and a.create_time >=? and a.create_time <? and a.update_time >=? and a.update_time <? and 0 = 1 order by a.update_time desc, a.create_time desc
	 */
    @SuppressWarnings("unchecked")
	public PageList<City> getPageList(City city, int pageSize, int pageNum) throws DataAccessException {
		return (PageList<City>)PageQueryUtils.pageQuery(getSqlMapClientTemplate(),"getPageList.City.trade",city,pageNum,pageSize);
	}

	/**
	 * 
	 * sql:select a.city_id, a.name, a.pycode, a.province_id, a.postcode, a.areacode, a.create_time, a.update_time, a.delete_flag from city a where a.delete_flag = 0 and 1=0 and a.city_id in ( ? ) order by a.update_time desc, a.create_time desc
	 */
    @SuppressWarnings("unchecked")
	public List<City> getCitysByCityIds(java.util.List<String> cityIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("cityIds",cityIds);
		return (List<City>)getSqlMapClientTemplate().queryForList("getCitysByCityIds.City.trade",params);
	}

	/**
	 * 
	 * sql:UPDATE city SET delete_flag = 1 , update_time = CURRENT_TIMESTAMP(6) where delete_flag = 0 and 1=0 and city_id in ( ? )
	 */
	public java.util.List<String> deleteByCityIds(java.util.List<String> cityIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("cityIds",cityIds);
        getSqlMapClientTemplate().update("deleteByCityIds.City.trade", params);
        return cityIds;
	}

	/**
	 * 
	 * sql:select a.city_id, a.name, a.province_id from city a where a.delete_flag = 0 and a.province_id = ?
	 */
    @SuppressWarnings("unchecked")
	public List<City> getCityOptions(String provinceId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("provinceId",provinceId);
		return (List<City>)getSqlMapClientTemplate().queryForList("getCityOptions.City.trade",params);
	}

}

