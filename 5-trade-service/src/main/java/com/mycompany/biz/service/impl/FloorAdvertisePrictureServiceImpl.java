/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.FloorAdvertisePrictureDao;
import com.mycompany.biz.domain.FloorAdvertisePricture;
import com.mycompany.biz.service.FloorAdvertisePrictureService;

/**
 * FloorAdvertisePrictureServiceImpl
 * <pre>
 * database table: floor_advertise_pricture
 * database table comments: FloorAdvertisePricture
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class FloorAdvertisePrictureServiceImpl implements FloorAdvertisePrictureService {

    @Resource(name = "floorAdvertisePrictureDao")
    FloorAdvertisePrictureDao floorAdvertisePrictureDao;

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#insert
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#insert
     */
    @Override
    public FloorAdvertisePricture insert(FloorAdvertisePricture floorAdvertisePricture) {
        return floorAdvertisePrictureDao.insert(floorAdvertisePricture);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#delete
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#delete
     */
    @Override
    public String delete(String floorId) {
        return floorAdvertisePrictureDao.delete(floorId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#update
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#update
     */
    @Override
    public FloorAdvertisePricture update(FloorAdvertisePricture floorAdvertisePricture) {
        return floorAdvertisePrictureDao.update(floorAdvertisePricture);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#getFloorAdvertisePrictureByFloorId
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#getFloorAdvertisePrictureByFloorId
     */
    @Override
    public FloorAdvertisePricture getFloorAdvertisePrictureByFloorId(String floorId) {
        return floorAdvertisePrictureDao.getFloorAdvertisePrictureByFloorId(floorId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#getPageList
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#getPageList
     */
    @Override
    public PageList<FloorAdvertisePricture> getPageList(FloorAdvertisePricture floorAdvertisePricture, int pageSize, int pageNum) {
        return floorAdvertisePrictureDao.getPageList(floorAdvertisePricture, pageSize, pageNum);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#getFloorAdvertisePricturesByFloorIds
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#getFloorAdvertisePricturesByFloorIds
     */
    @Override
    public List<FloorAdvertisePricture> getFloorAdvertisePricturesByFloorIds(java.util.List<String> floorIds) {
        return floorAdvertisePrictureDao.getFloorAdvertisePricturesByFloorIds(floorIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorAdvertisePrictureDao#deleteByFloorIds
     * @see com.mycompany.biz.service.FloorAdvertisePrictureService#deleteByFloorIds
     */
    @Override
    public java.util.List<String> deleteByFloorIds(java.util.List<String> floorIds) {
        return floorAdvertisePrictureDao.deleteByFloorIds(floorIds);
    }

    /*** 保存floorAdvertisePricture,有id时更新，没有id时插入,并带回新的id，返回 floorAdvertisePricture*/
    @Override
    public FloorAdvertisePricture saveFloorAdvertisePricture(FloorAdvertisePricture floorAdvertisePricture) {
        if (floorAdvertisePricture != null) {
            java.lang.String floorId = floorAdvertisePricture.getFloorId();
            if (StringUtil.isBlank(floorId)) {
                insert(floorAdvertisePricture);
            } else {
                update(floorAdvertisePricture);
            }
        }
        return floorAdvertisePricture;
    }

    /*** 批量保存floorAdvertisePrictures,有id时更新，没有id时插入,并带回新的id，返回 floorAdvertisePrictures*/
    @Override
    public List<FloorAdvertisePricture> saveFloorAdvertisePrictures(List<FloorAdvertisePricture> floorAdvertisePrictures) {
        for (FloorAdvertisePricture floorAdvertisePricture : floorAdvertisePrictures) {
            this.saveFloorAdvertisePricture(floorAdvertisePricture);
        }
        return floorAdvertisePrictures;
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, FloorAdvertisePricture> destSetMethod) {
        ServiceUtil.interalAssignBeanTo(dests, destGetMethod, destSetMethod, this, FloorAdvertisePrictureServiceImpl::getFloorAdvertisePricturesByFloorIds, FloorAdvertisePricture::getFloorId);
    }

    @Override
    public <D, G> void assignBeansTo(Collection<D> dests, Function<? super D, G> destGetMethod, BiConsumer<D, List<FloorAdvertisePricture>> destSetMethod, BiConsumer<FloorAdvertisePricture, List<G>> resultSetQueryIdsFun, Function<? super FloorAdvertisePricture, G> resultGetGoupIdFun) {
        ServiceUtil.interalAssignBeansTo(dests, destGetMethod, destSetMethod, this, new FloorAdvertisePricture(), resultSetQueryIdsFun, resultGetGoupIdFun, 100);
    }

    @Override
    public <D> void mergeBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod) {
        ServiceUtil.interalMergeBeanTo(dests, destGetMethod, this, FloorAdvertisePrictureServiceImpl::getFloorAdvertisePricturesByFloorIds, FloorAdvertisePricture::getFloorId);
    }
}
