/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.dao;

import java.util.List;

import com.mycompany.biz.domain.AdvertisePicture;
import org.springframework.dao.DataAccessException;
import org.stategen.framework.lite.PageList;

/**
 * AdvertisePictureDao
 * <pre>
 * database table: demo_advertise_picture
 * database table comments: AdvertisePicture
 * This file is generated by <tt>dalgenx</tt>, a DAL (Data Access Layer)
 *
 * 该类仅可以修改引用
 * </pre>
 */
public interface AdvertisePictureDao {

	/**
    <pre>
    &#64;ApiParam() Long advertiseId,
    &#64;ApiParam() String pictureAddress,
    &#64;ApiParam() String toPlace,
    &#64;ApiParam() Integer urlType
    ,&#64;ApiParam(hidden = true) AdvertisePicture advertisePicture
    
    </pre>
	 * 
	 * sql:insert into demo_advertise_picture ( create_time , update_time , delete_flag , advertise_id , PICTURE_ADDRESS , TO_PLACE , url_type ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0,?,?,?,?)
	 */
	public AdvertisePicture insert(AdvertisePicture advertisePicture) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("advertiseId") Long advertiseId
    
    </pre>
	 * 
	 * sql:UPDATE demo_advertise_picture a SET a.delete_flag = 1 , a.update_time = CURRENT_TIMESTAMP(6) where a.delete_flag = 0 and a.advertise_id = ?
	 */
	public Long delete(Long advertiseId) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam() String pictureAddress,
    &#64;ApiParam() String toPlace,
    &#64;ApiParam() Integer urlType,
    &#64;ApiParam() Long advertiseId
    ,&#64;ApiParam(hidden = true) AdvertisePicture advertisePicture
    
    </pre>
	 * 
	 * sql:UPDATE demo_advertise_picture a SET a.update_time= CURRENT_TIMESTAMP(6) , a.PICTURE_ADDRESS = ? , a.TO_PLACE = ? , a.url_type = ? where a.delete_flag = 0 and a.advertise_id = ?
	 */
	public AdvertisePicture update(AdvertisePicture advertisePicture) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("advertiseId") Long advertiseId
    
    </pre>
	 * 
	 * sql:select a.advertise_id, a.PICTURE_ADDRESS, a.TO_PLACE, a.url_type, a.create_time, a.update_time, a.delete_flag from demo_advertise_picture a where a.delete_flag = 0 and a.advertise_id = ?
	 */
	public AdvertisePicture getAdvertisePictureByAdvertiseId(Long advertiseId) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam() Long advertiseId,
    &#64;ApiParam()&#64;RequestParam(required =false,name="advertiseIds") ArrayList&lt;Long&gt; advertiseIds,
    &#64;ApiParam() String pictureAddress,
    &#64;ApiParam() String pictureAddressLike,
    &#64;ApiParam() String toPlace,
    &#64;ApiParam() String toPlaceLike,
    &#64;ApiParam() Integer urlType,
    &#64;ApiParam()&#64;RequestParam(required =false,name="urlTypes") ArrayList&lt;Integer&gt; urlTypes,
    &#64;ApiParam() Date createTimeMin,
    &#64;ApiParam() Date createTimeMax,
    &#64;ApiParam() Date updateTimeMin,
    &#64;ApiParam() Date updateTimeMax
    ,&#64;ApiParam(hidden = true) AdvertisePicture advertisePicture
    ,Pagination pagination
    </pre>
	 * 
	 * sql:select a.advertise_id, a.PICTURE_ADDRESS, a.TO_PLACE, a.url_type, a.create_time, a.update_time, a.delete_flag from demo_advertise_picture a where a.delete_flag = 0 and a.advertise_id=? and a.advertise_id in ( ? ) and a.PICTURE_ADDRESS=? and a.PICTURE_ADDRESS like CONCAT('%',?,'%') and a.TO_PLACE=? and a.TO_PLACE like CONCAT('%',?,'%') and a.url_type=? and a.url_type in ( ? ) and a.create_time >=? and a.create_time <? and a.update_time >=? and a.update_time <? and 0 = 1 order by a.update_time desc, a.create_time desc
	 */
	public PageList<AdvertisePicture> getPageList(AdvertisePicture advertisePicture, int pageSize, int pageNum) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("advertiseId")&#64;RequestParam(required =false,name="advertiseIds") ArrayList&lt;Long&gt; advertiseIds
    
    </pre>
	 * 
	 * sql:select a.advertise_id, a.PICTURE_ADDRESS, a.TO_PLACE, a.url_type, a.create_time, a.update_time, a.delete_flag from demo_advertise_picture a where a.delete_flag = 0 and 1=0 and a.advertise_id in ( ? ) order by a.update_time desc, a.create_time desc
	 */
	public List<AdvertisePicture> getAdvertisePicturesByAdvertiseIds(java.util.List<Long> advertiseIds) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("advertiseId")&#64;RequestParam(required =false,name="advertiseIds") ArrayList&lt;Long&gt; advertiseIds
    
    </pre>
	 * 
	 * sql:UPDATE demo_advertise_picture a SET a.delete_flag = 1 , a.update_time = CURRENT_TIMESTAMP(6) where a.delete_flag = 0 and 1=0 and a.advertise_id in ( ? )
	 */
	public java.util.List<Long> deleteByAdvertiseIds(java.util.List<Long> advertiseIds) throws DataAccessException;
	

}



