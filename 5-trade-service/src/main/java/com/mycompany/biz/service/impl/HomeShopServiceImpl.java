/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.IIdGenerator;
import org.stategen.framework.lite.IdGenerateService;
import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.HomeShopDao;
import com.mycompany.biz.domain.HomeShop;
import com.mycompany.biz.service.HomeShopService;

/**
 * HomeShopServiceImpl
 * <pre>
 * database table: home_shop
 * database table comments: HomeShop
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class HomeShopServiceImpl implements HomeShopService, IdGenerateService<String> {

    @Resource
    private IIdGenerator idGenerator;

    @Resource(name = "homeShopDao")
    HomeShopDao homeShopDao;

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#insert
     * @see com.mycompany.biz.service.HomeShopService#insert
     */
    @Override
    public HomeShop insert(HomeShop homeShop) {
        return homeShopDao.insert(homeShop, this);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#delete
     * @see com.mycompany.biz.service.HomeShopService#delete
     */
    @Override
    public String delete(String homeShopId) {
        return homeShopDao.delete(homeShopId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#update
     * @see com.mycompany.biz.service.HomeShopService#update
     */
    @Override
    public HomeShop update(HomeShop homeShop) {
        return homeShopDao.update(homeShop);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#getHomeShopByHomeShopId
     * @see com.mycompany.biz.service.HomeShopService#getHomeShopByHomeShopId
     */
    @Override
    public HomeShop getHomeShopByHomeShopId(String homeShopId) {
        return homeShopDao.getHomeShopByHomeShopId(homeShopId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#getHomeShopsByHomeShopIds
     * @see com.mycompany.biz.service.HomeShopService#getHomeShopsByHomeShopIds
     */
    @Override
    public List<HomeShop> getHomeShopsByHomeShopIds(java.util.List<String> homeShopIds) {
        return homeShopDao.getHomeShopsByHomeShopIds(homeShopIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#deleteByHomeShopIds
     * @see com.mycompany.biz.service.HomeShopService#deleteByHomeShopIds
     */
    @Override
    public java.util.List<String> deleteByHomeShopIds(java.util.List<String> homeShopIds) {
        return homeShopDao.deleteByHomeShopIds(homeShopIds);
    }

    /*** 保存homeShop,有id时更新，没有id时插入,并带回新的id，返回 homeShop*/
    @Override
    public HomeShop saveHomeShop(HomeShop homeShop) {
        if (homeShop != null) {
            java.lang.String homeShopId = homeShop.getHomeShopId();
            if (StringUtil.isBlank(homeShopId)) {
                insert(homeShop);
            } else {
                update(homeShop);
            }
        }
        return homeShop;
    }

    /*** 批量保存homeShops,有id时更新，没有id时插入,并带回新的id，返回 homeShops*/
    @Override
    public List<HomeShop> saveHomeShops(List<HomeShop> homeShops) {
        for (HomeShop homeShop : homeShops) {
            this.saveHomeShop(homeShop);
        }
        return homeShops;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.HomeShopDao#getPageList
     * @see com.mycompany.biz.service.HomeShopService#getPageList
     */
    @Override
    public PageList<HomeShop> getPageList(HomeShop homeShop, int pageSize, int pageNum) {
        return homeShopDao.getPageList(homeShop, pageSize, pageNum);
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, HomeShop> destSetMethod) {
        ServiceUtil.interalAssignBeanTo(dests, destGetMethod, destSetMethod, this, HomeShopServiceImpl::getHomeShopsByHomeShopIds, HomeShop::getHomeShopId);
    }

    @Override
    public <D, G> void assignBeansTo(Collection<D> dests, Function<? super D, G> destGetMethod, BiConsumer<D, List<HomeShop>> destSetMethod, BiConsumer<HomeShop, List<G>> resultSetQueryIdsFun, Function<? super HomeShop, G> resultGetGoupIdFun) {
        ServiceUtil.interalAssignBeansTo(dests, destGetMethod, destSetMethod, this, new HomeShop(), resultSetQueryIdsFun, resultGetGoupIdFun, 100);
    }

    @Override
    public <D> void mergeBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod) {
        ServiceUtil.interalMergeBeanTo(dests, destGetMethod, this, HomeShopServiceImpl::getHomeShopsByHomeShopIds, HomeShop::getHomeShopId);
    }

    @Override
    public <T> String generateId() {
        return this.idGenerator.generateId(String.class, HomeShop.class);
    }
}
