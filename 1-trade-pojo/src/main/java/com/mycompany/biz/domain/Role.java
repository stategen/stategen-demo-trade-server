/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.domain;

import java.text.SimpleDateFormat;

import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Max;
import javax.validation.constraints.NotNull;

import org.stategen.framework.annotation.Editor;
import org.stategen.framework.lite.enums.EditorType;

import com.alibaba.fastjson.annotation.JSONField;
import io.swagger.annotations.ApiModelProperty;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * Role
 * <pre>
 * database table: role
 * database table comments: Role
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 该类仅不可以修改dalgen生成的属生(field)类型 ,方法(Method)返回值类型和参数类型
 * 不建议使@Data,其hashCode有问题
 * </pre>
 */
@Getter
@Setter
@Builder
@NoArgsConstructor
@AllArgsConstructor
public class Role implements java.io.Serializable {

    private static final long serialVersionUID = -5216457518046898601L;

    /***角色ID   db_column: role_id VARCHAR */
    @ApiModelProperty("角色ID")
    @Id
    @Max(64)
    @Editor(EditorType.Hidden.class)
    private String roleId;

    /***角色名称   db_column: role_name VARCHAR */
    @ApiModelProperty("角色名称")
    @NotNull
    @Max(64)
    private String roleName;

    /***描述   db_column: description VARCHAR */
    @ApiModelProperty("描述")
    @NotNull
    @Max(255)
    private String description;

    /***创建时间   db_column: create_time TIMESTAMP */
    @ApiModelProperty(value = "创建时间", hidden = true)
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date createTime;

    /***更新时间   db_column: update_time TIMESTAMP */
    @ApiModelProperty(value = "更新时间", hidden = true)
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date updateTime;

    /***是否删除(0:正常，1删除)   db_column: delete_flag INTEGER */
    @ApiModelProperty(value = "是否删除(0:正常，1删除)", hidden = true)
    private Integer deleteFlag;

    /***角色类型 enum   db_column: role_type VARCHAR */
    @ApiModelProperty("角色类型 enum")
    @Max(64)
    private String roleType;

    /*----------------getter & setter ignore by lombok -------------------*/
    public String toString() {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd H:m:ss.SSS");
        StringBuilder sb = new StringBuilder(1024);
        sb.append('{');
        sb.append("roleIds=").append(roleIds).append('\n');
        sb.append("roleNameLike=").append(roleNameLike).append('\n');
        sb.append("descriptionLike=").append(descriptionLike).append('\n');
        sb.append("createTimeMin=").append(createTimeMin != null ? df.format(createTimeMin) : null).append('\n');
        sb.append("createTimeMax=").append(createTimeMax != null ? df.format(createTimeMax) : null).append('\n');
        sb.append("updateTimeMin=").append(updateTimeMin != null ? df.format(updateTimeMin) : null).append('\n');
        sb.append("updateTimeMax=").append(updateTimeMax != null ? df.format(updateTimeMax) : null).append('\n');
        sb.append("roleTypes=").append(roleTypes).append('\n');
        sb.append("roleId=").append(roleId).append('\n');
        sb.append("roleName=").append(roleName).append('\n');
        sb.append("description=").append(description).append('\n');
        sb.append("createTime=").append(createTime != null ? df.format(createTime) : null).append('\n');
        sb.append("updateTime=").append(updateTime != null ? df.format(updateTime) : null).append('\n');
        sb.append("deleteFlag=").append(deleteFlag).append('\n');
        sb.append("roleType=").append(roleType);
        sb.append('}');
        return sb.toString();
    }

    /*** 角色IDs in getPageList */
    @ApiModelProperty("角色ID s")
    @JSONField(serialize = false)
    private java.util.List<String> roleIds;

    /*** 角色名称Like in getPageList */
    @ApiModelProperty("角色名称Like")
    @JSONField(serialize = false)
    private String roleNameLike;

    /*** 描述Like in getPageList */
    @ApiModelProperty("描述Like")
    @JSONField(serialize = false)
    private String descriptionLike;

    /*** 创建时间Min in getPageList */
    @ApiModelProperty("创建时间Min")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date createTimeMin;

    /*** 创建时间Max in getPageList */
    @ApiModelProperty("创建时间Max")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date createTimeMax;

    /*** 更新时间Min in getPageList */
    @ApiModelProperty("更新时间Min")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date updateTimeMin;

    /*** 更新时间Max in getPageList */
    @ApiModelProperty("更新时间Max")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date updateTimeMax;

    /*** 角色类型 enums in getPageList */
    @ApiModelProperty("角色类型 s")
    @JSONField(serialize = false)
    private java.util.List<String> roleTypes;
}
