/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */    
package com.mycompany.biz.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mycompany.biz.domain.Organization;
import com.mycompany.biz.dao.OrganizationDao;
import org.stategen.framework.lite.PageList;

import org.springframework.dao.DataAccessException;
import org.stategen.framework.lite.IdGenerateService;
/**
 * OrganizationDao
 * <pre>
 * database table: demo_organization
 * database table comments: 组织架构表 ，用于水平权限  --tree
 * This file is generated by <tt>dalgenx</tt>, a DAL (Data Access Layer)
 *
 * 该类仅可以修改引用
 * </pre>
 */
public class OrganizationDaoImpl  extends SqlDaoSupportBase implements OrganizationDao {


	/**
	 * 
	 * sql:insert into demo_organization ( create_time , update_time , delete_flag , org_id , parent_id , name , org_type ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0,?,?,?,?)
	 */
	public Organization insert(Organization organization, IdGenerateService<Long> idGenerateService) throws DataAccessException {
		if(organization == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
        if (idGenerateService != null && organization.getOrgId() == null) {
            Long orgId = idGenerateService.generateId(Organization.class);
            if (orgId != null) {
                organization.setOrgId(orgId);
            }
        }
        super.insert("Organization.insert", organization);
		return organization;
	}

	/**
	 * 
	 * sql:UPDATE demo_organization a SET a.delete_flag = 1 , a.update_time = CURRENT_TIMESTAMP(6) where a.delete_flag = 0 and a.org_id = ?
	 */
	public Long delete(Long orgId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("orgId",orgId);
        super.update("Organization.delete", params);
        return orgId;
	}

	/**
	 * 
	 * sql:UPDATE demo_organization a SET a.update_time= CURRENT_TIMESTAMP(6) , a.parent_id = ? , a.name = ? , a.org_type = ? where a.delete_flag = 0 and a.org_id = ?
	 */
	public Organization update(Organization organization) throws DataAccessException {
		if(organization == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
        super.update("Organization.update", organization);
		return organization;
	}

	/**
	 * 
	 * sql:select a.org_id, a.parent_id, a.name, a.org_type, a.update_time, a.create_time, a.delete_flag from demo_organization a where a.delete_flag = 0 and a.org_id = ?
	 */
	public Organization getOrganizationByOrgId(Long orgId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("orgId",orgId);
		return (Organization)super.selectOne("Organization.getOrganizationByOrgId",params);
	}

	/**
	 * 
	 * sql:select a.org_id, a.parent_id, a.name, a.org_type, a.update_time, a.create_time, a.delete_flag from demo_organization a where a.delete_flag = 0 and a.org_id=? and a.org_id in ( ? ) and a.parent_id=? and a.parent_id in ( ? ) and a.name=? and a.name like CONCAT('%',?,'%') and a.org_type=? and a.org_type in ( ? ) and a.update_time >=? and a.update_time <? and a.create_time >=? and a.create_time <? and 0 = 1 order by a.update_time desc, a.create_time desc
	 */
	public PageList<Organization> getPageList(Organization organization, int pageSize, int pageNum) throws DataAccessException {
		return super.pageQuery("Organization.getPageList",organization,pageNum,pageSize);
	}

	/**
	 * 
	 * sql:select a.org_id, a.parent_id, a.name, a.org_type, a.update_time, a.create_time, a.delete_flag from demo_organization a where a.delete_flag = 0 and 1=0 and a.org_id in ( ? ) order by a.update_time desc, a.create_time desc
	 */
	public List<Organization> getOrganizationsByOrgIds(java.util.List<Long> orgIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("orgIds",orgIds);
		return super.selectList("Organization.getOrganizationsByOrgIds",params);
	}

	/**
	 * 
	 * sql:UPDATE demo_organization a SET a.delete_flag = 1 , a.update_time = CURRENT_TIMESTAMP(6) where a.delete_flag = 0 and 1=0 and a.org_id in ( ? )
	 */
	public java.util.List<Long> deleteByOrgIds(java.util.List<Long> orgIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("orgIds",orgIds);
        super.update("Organization.deleteByOrgIds", params);
        return orgIds;
	}
}

