/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.IIdGenerator;
import org.stategen.framework.lite.IdGenerateService;
import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.ShopDao;
import com.mycompany.biz.domain.Shop;
import com.mycompany.biz.service.ShopService;

/**
 * ShopServiceImpl
 * <pre>
 * database table: shop
 * database table comments: Shop
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class ShopServiceImpl implements ShopService, IdGenerateService<String> {

    @Resource
    private IIdGenerator idGenerator;

    @Resource(name = "shopDao")
    ShopDao shopDao;

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#insert
     * @see com.mycompany.biz.service.ShopService#insert
     */
    @Override
    public Shop insert(Shop shop) {
        return shopDao.insert(shop, this);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#delete
     * @see com.mycompany.biz.service.ShopService#delete
     */
    @Override
    public String delete(String shopId) {
        return shopDao.delete(shopId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#update
     * @see com.mycompany.biz.service.ShopService#update
     */
    @Override
    public Shop update(Shop shop) {
        return shopDao.update(shop);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#getShopByShopId
     * @see com.mycompany.biz.service.ShopService#getShopByShopId
     */
    @Override
    public Shop getShopByShopId(String shopId) {
        return shopDao.getShopByShopId(shopId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#getShopsByShopIds
     * @see com.mycompany.biz.service.ShopService#getShopsByShopIds
     */
    @Override
    public List<Shop> getShopsByShopIds(java.util.List<String> shopIds) {
        return shopDao.getShopsByShopIds(shopIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#deleteByShopIds
     * @see com.mycompany.biz.service.ShopService#deleteByShopIds
     */
    @Override
    public java.util.List<String> deleteByShopIds(java.util.List<String> shopIds) {
        return shopDao.deleteByShopIds(shopIds);
    }

    /*** 保存shop,有id时更新，没有id时插入,并带回新的id，返回 shop*/
    @Override
    public Shop saveShop(Shop shop) {
        if (shop != null) {
            java.lang.String shopId = shop.getShopId();
            if (StringUtil.isBlank(shopId)) {
                insert(shop);
            } else {
                update(shop);
            }
        }
        return shop;
    }

    /*** 批量保存shops,有id时更新，没有id时插入,并带回新的id，返回 shops*/
    @Override
    public List<Shop> saveShops(List<Shop> shops) {
        for (Shop shop : shops) {
            this.saveShop(shop);
        }
        return shops;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ShopDao#getPageList
     * @see com.mycompany.biz.service.ShopService#getPageList
     */
    @Override
    public PageList<Shop> getPageList(Shop shop, int pageSize, int pageNum) {
        return shopDao.getPageList(shop, pageSize, pageNum);
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, Shop> destSetMethod) {
        ServiceUtil.interalAssignBeanTo(dests, destGetMethod, destSetMethod, this, ShopServiceImpl::getShopsByShopIds, Shop::getShopId);
    }

    @Override
    public <D, G> void assignBeansTo(Collection<D> dests, Function<? super D, G> destGetMethod, BiConsumer<D, List<Shop>> destSetMethod, BiConsumer<Shop, List<G>> resultSetQueryIdsFun, Function<? super Shop, G> resultGetGoupIdFun) {
        ServiceUtil.interalAssignBeansTo(dests, destGetMethod, destSetMethod, this, new Shop(), resultSetQueryIdsFun, resultGetGoupIdFun, 100);
    }

    @Override
    public <D> void mergeBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod) {
        ServiceUtil.interalMergeBeanTo(dests, destGetMethod, this, ShopServiceImpl::getShopsByShopIds, Shop::getShopId);
    }

    @Override
    public <T> String generateId() {
        return this.idGenerator.generateId(String.class, Shop.class);
    }
}
