/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.mycompany.biz.domain.Category;
import com.mycompany.biz.dao.CategoryDao;
import org.stategen.framework.ibatis.util.PageQueryUtils;
import org.stategen.framework.lite.PageList;

import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

/**
 * CategoryDao
 * <pre>
 * database table: category
 * database table comments: Category
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 该类仅可以修改引用
 * </pre>
 */
public class CategoryDaoImpl  extends SqlMapClientDaoSupport implements CategoryDao {

	/**
	 * 
	 * sql:insert into category ( create_time , update_time , delete_flag , mall_category_id , mall_category_name , comments , image ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0,?,?,?,?)
	 */
	public Category insert(Category category) throws DataAccessException {
		if(category == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
        getSqlMapClientTemplate().insert("insert.Category.trade", category);
		return category;
	}

	/**
	 * 
	 * sql:UPDATE category SET delete_flag = 1 , update_time = CURRENT_TIMESTAMP(6) where delete_flag = 0 and mall_category_id = ?
	 */
	public String delete(String mallCategoryId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("mallCategoryId",mallCategoryId);
        getSqlMapClientTemplate().update("delete.Category.trade", params);
        return mallCategoryId;
	}

	/**
	 * 
	 * sql:UPDATE category SET update_time= CURRENT_TIMESTAMP(6) , mall_category_name = ? , comments = ? , image = ? where delete_flag = 0 and mall_category_id = ?
	 */
	public Category update(Category category) throws DataAccessException {
		if(category == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
        getSqlMapClientTemplate().update("update.Category.trade", category);
		return category;
	}

	/**
	 * 
	 * sql:select a.mall_category_id, a.mall_category_name, a.comments, a.image, a.create_time, a.update_time, a.delete_flag from category a where a.delete_flag = 0 and a.mall_category_id = ?
	 */
	public Category getCategoryByMallCategoryId(String mallCategoryId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("mallCategoryId",mallCategoryId);
		return (Category)getSqlMapClientTemplate().queryForObject("getCategoryByMallCategoryId.Category.trade",params);
	}

	/**
	 * 
	 * sql:select a.mall_category_id, a.mall_category_name, a.comments, a.image, a.create_time, a.update_time, a.delete_flag from category a where a.delete_flag = 0 and a.mall_category_id=? and a.mall_category_id in ( ? ) and a.mall_category_name=? and a.mall_category_name like CONCAT('%',?,'%') and a.comments=? and a.comments like CONCAT('%',?,'%') and a.create_time >=? and a.create_time <? and a.update_time >=? and a.update_time <? and 0 = 1 order by a.mall_category_id
	 */
    @SuppressWarnings("unchecked")
	public PageList<Category> getPageList(Category category, int pageSize, int pageNum) throws DataAccessException {
		return (PageList<Category>)PageQueryUtils.pageQuery(getSqlMapClientTemplate(),"getPageList.Category.trade",category,pageNum,pageSize);
	}

	/**
	 * 
	 * sql:select a.mall_category_id, a.mall_category_name, a.comments, a.image, a.create_time, a.update_time, a.delete_flag from category a where a.delete_flag = 0 and 1=0 and a.mall_category_id in ( ? ) order by a.mall_category_id
	 */
    @SuppressWarnings("unchecked")
	public List<Category> getCategorysByMallCategoryIds(java.util.List<String> mallCategoryIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("mallCategoryIds",mallCategoryIds);
		return (List<Category>)getSqlMapClientTemplate().queryForList("getCategorysByMallCategoryIds.Category.trade",params);
	}

	/**
	 * 
	 * sql:UPDATE category SET delete_flag = 1 , update_time = CURRENT_TIMESTAMP(6) where delete_flag = 0 and 1=0 and mall_category_id in ( ? )
	 */
	public java.util.List<String> deleteByMallCategoryIds(java.util.List<String> mallCategoryIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("mallCategoryIds",mallCategoryIds);
        getSqlMapClientTemplate().update("deleteByMallCategoryIds.Category.trade", params);
        return mallCategoryIds;
	}

}

