<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.mycompany.biz</groupId>
        <artifactId>trade-parent</artifactId>
        <version>1.0.0</version>
        <relativePath>../</relativePath>
    </parent>

    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
    </properties>

    <artifactId>trade-web-app</artifactId>
    <version>${system.version-SNAPSHOT}</version>
    <packaging>war</packaging>
    <name>7-trade-web-app</name>



    <dependencies>
        <!-- @since stg2.2.3.RELEASE,为减少jar维护难度，架构层jars可统一引用各自层的layer-pom -->
        <dependency>
            <groupId>org.stategen.framework.layers</groupId>
            <artifactId>stategen-layer-web-pom</artifactId>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.mycompany.biz</groupId>
            <artifactId>trade-web-base</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>

        <!--qiniu begin -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.12.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>happy-dns-java</artifactId>
            <version>0.1.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio</artifactId>
            <version>3.4.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>7.1.3</version>
            <scope>test</scope>
        </dependency>
        <!--qiniu end -->



    </dependencies>

    <profiles>
        <!--开发和测试 -->
        <profile>
            <id>front</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <jdk>[1.8,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <!-- 生成ts文件模型和app -->
                            <execution>
                                <id>>>>>>>>>>>>>>>>> tradeApp auto generate h5 frondend files 生成前端 h5 代码 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>H5FacadeProcessor</mainClass>
                                    <classpathScope>test</classpathScope>
                                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                    <classpathScope>test</classpathScope>
                                </configuration>
                            </execution>
                            <!-- 安装前端代码需要的插件 -->
                            <execution>
                                <id>>>>>>>>>>>>>>>>>tradeApp yarn 下载 h5 前端 h5 依赖 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>./app-frontend-h5/</workingDirectory>
                                    <executable>yarn</executable>
                                    <arguments>
                                        <argument>install</argument>
                                        <argument>--ignore-engines</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!-- 编译前端代码 -->
                            <execution>
                                <id>>>>>>>>>>>>>>>>>tradeApp yarn run build 编译 h5 前端 h5 代码 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>./app-frontend-h5/</workingDirectory>
                                    <executable>yarn</executable>
                                    <arguments>
                                        <argument>run</argument>
                                        <argument>build</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <!-- 生成dart文件模型和app -->
                            <execution>
                                <id>>>>>>>>>>>>>>>>>tradeApp auto generate flutter frondend files 生成 flutter 前端代码 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>FlutterFacadeProcessor</mainClass>
                                    <classpathScope>test</classpathScope>
                                    <cleanupDaemonThreads>false</cleanupDaemonThreads>
                                </configuration>
                            </execution>



                            <!--APPEND_TAG_DO_NOT_CHANGE -->

                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <finalName>tradeApp</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            
            <resource>
                <directory>WebRoot/pages</directory>
                <targetPath>public/pages</targetPath>
            </resource>
        </resources>



        <plugins>
            <plugin>
                <!-- 引入即不发布到maven仓库 -->
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>

            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>

            <!-- springboot begin -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <outputDirectory>D:\java\tomcat\tomcat-9.0.30\webapps</outputDirectory>
                    <mainClass>com.mycompany.biz.TradeAppApplication</mainClass>
                    <addResources />

                </configuration>
            </plugin>

        </plugins>

    </build>
</project>