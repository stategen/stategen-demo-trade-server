/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.IIdGenerator;
import org.stategen.framework.lite.IdGenerateService;
import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.GoodsCommentDao;
import com.mycompany.biz.domain.GoodsComment;
import com.mycompany.biz.service.GoodsCommentService;

/**
 * GoodsCommentServiceImpl
 * <pre>
 * database table: goods_comment
 * database table comments: GoodsComment
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class GoodsCommentServiceImpl implements GoodsCommentService, IdGenerateService<String> {

    @Resource
    private IIdGenerator idGenerator;

    @Resource(name = "goodsCommentDao")
    GoodsCommentDao goodsCommentDao;

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#insert
     * @see com.mycompany.biz.service.GoodsCommentService#insert
     */
    @Override
    public GoodsComment insert(GoodsComment goodsComment) {
        return goodsCommentDao.insert(goodsComment, this);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#delete
     * @see com.mycompany.biz.service.GoodsCommentService#delete
     */
    @Override
    public String delete(String commentsId) {
        return goodsCommentDao.delete(commentsId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#update
     * @see com.mycompany.biz.service.GoodsCommentService#update
     */
    @Override
    public GoodsComment update(GoodsComment goodsComment) {
        return goodsCommentDao.update(goodsComment);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#getGoodsCommentByCommentsId
     * @see com.mycompany.biz.service.GoodsCommentService#getGoodsCommentByCommentsId
     */
    @Override
    public GoodsComment getGoodsCommentByCommentsId(String commentsId) {
        return goodsCommentDao.getGoodsCommentByCommentsId(commentsId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#getGoodsCommentsByCommentsIds
     * @see com.mycompany.biz.service.GoodsCommentService#getGoodsCommentsByCommentsIds
     */
    @Override
    public List<GoodsComment> getGoodsCommentsByCommentsIds(java.util.List<String> commentsIds) {
        return goodsCommentDao.getGoodsCommentsByCommentsIds(commentsIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#deleteByCommentsIds
     * @see com.mycompany.biz.service.GoodsCommentService#deleteByCommentsIds
     */
    @Override
    public java.util.List<String> deleteByCommentsIds(java.util.List<String> commentsIds) {
        return goodsCommentDao.deleteByCommentsIds(commentsIds);
    }

    /*** 保存goodsComment,有id时更新，没有id时插入,并带回新的id，返回 goodsComment*/
    @Override
    public GoodsComment saveGoodsComment(GoodsComment goodsComment) {
        if (goodsComment != null) {
            java.lang.String commentsId = goodsComment.getCommentsId();
            if (StringUtil.isBlank(commentsId)) {
                insert(goodsComment);
            } else {
                update(goodsComment);
            }
        }
        return goodsComment;
    }

    /*** 批量保存goodsComments,有id时更新，没有id时插入,并带回新的id，返回 goodsComments*/
    @Override
    public List<GoodsComment> saveGoodsComments(List<GoodsComment> goodsComments) {
        for (GoodsComment goodsComment : goodsComments) {
            this.saveGoodsComment(goodsComment);
        }
        return goodsComments;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.GoodsCommentDao#getPageList
     * @see com.mycompany.biz.service.GoodsCommentService#getPageList
     */
    @Override
    public PageList<GoodsComment> getPageList(GoodsComment goodsComment, int pageSize, int pageNum) {
        return goodsCommentDao.getPageList(goodsComment, pageSize, pageNum);
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, GoodsComment> destSetMethod) {
        ServiceUtil.interalAssignBeanTo(dests, destGetMethod, destSetMethod, this, GoodsCommentServiceImpl::getGoodsCommentsByCommentsIds, GoodsComment::getCommentsId);
    }

    @Override
    public <D, G> void assignBeansTo(Collection<D> dests, Function<? super D, G> destGetMethod, BiConsumer<D, List<GoodsComment>> destSetMethod, BiConsumer<GoodsComment, List<G>> resultSetQueryIdsFun, Function<? super GoodsComment, G> resultGetGoupIdFun) {
        ServiceUtil.interalAssignBeansTo(dests, destGetMethod, destSetMethod, this, new GoodsComment(), resultSetQueryIdsFun, resultGetGoupIdFun, 100);
    }

    @Override
    public <D> void mergeBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod) {
        ServiceUtil.interalMergeBeanTo(dests, destGetMethod, this, GoodsCommentServiceImpl::getGoodsCommentsByCommentsIds, GoodsComment::getCommentsId);
    }

    @Override
    public <T> String generateId() {
        return this.idGenerator.generateId(String.class, GoodsComment.class);
    }
}
