<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE
    table SYSTEM "https://github.com/stategen/dalgenx/blob/master/gen.schemas-1.0.dtd"
    [<!ENTITY ORGANIZATION SYSTEM "demo_organization.xml.xhtml">
]>
<table sqlName="demo_organization" className="Organization" remarks="组织架构表 ，用于水平权限  --tree">
   <!-- table描述中有'-tree'将生成辅助平面表以及相应的存储过程及触发器 -->
   <!-- cut到 mysql中执行
       /* 创建树型表对应的平面表 */
       DROP TABLE IF EXISTS demo_organization_flat_h;
       CREATE TABLE demo_organization_flat_h (
         id bigint(20) NOT NULL,
         org_id BIGINT(19) NOT NULL,
         parent_id BIGINT(19) NOT NULL,
         update_time timestamp(6) NULL DEFAULT NULL  COMMENT '更新时间',
         create_time timestamp(6) NULL DEFAULT NULL COMMENT '创建时间',
         delete_flag tinyint(1) DEFAULT '0' COMMENT '是否删除 (0:正常，1删除)',
         PRIMARY KEY (id),
         KEY org_id (org_id) USING BTREE,
         KEY parent_id (parent_id) USING BTREE
       ) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COMMENT='树型结构转换成平面数据，便于查询';

       /* 创建用于跟据树型表对应的数据生成平面表数据的存储过程 */
       DROP PROCEDURE if EXISTS demo_organization_flat_pr;
       CREATE PROCEDURE demo_organization_flat_pr()
       BEGIN
         declare flatId BIGINT(20) default 0;
         declare nodeId BIGINT(19) default -1;
         declare parentId BIGINT(19) default -1;
         declare done BOOLEAN DEFAULT 0;

         declare cur1 CURSOR FOR select org_id ,parent_id from demo_organization ;
         declare CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
         set @current =CURRENT_TIMESTAMP();

         OPEN cur1;
         FETCH cur1 INTO nodeId, parentId;

         DELETE from demo_organization_flat_h;
         WHILE ( done =0 ) DO
           WHILE (parentId is not null) do
             set flatId=flatId+1;
             insert into demo_organization_flat_h(id,org_id,parent_id,update_time,create_time,delete_flag) values(flatId,nodeId,parentId,@current,@current,0);
             set parentId =(select parent_id from demo_organization where org_id=parentId);
           END WHILE;
           FETCH cur1 INTO nodeId, parentId;
         END WHILE;
       /* call demo_organization_flat_pr(); */

         CLOSE cur1;
       END;

       /* 创建插入触发器 */
       DROP TRIGGER if EXISTS demo_organization_flat_insert_tr;
       CREATE TRIGGER demo_organization_flat_insert_tr AFTER INSERT on demo_organization for EACH ROW
       BEGIN
         CALL demo_organization_flat_pr();
       end;

       /* 创建更新触发器 */
       DROP TRIGGER if EXISTS demo_organization_flat_update_tr;
       CREATE TRIGGER demo_organization_flat_update_tr AFTER UPDATE on demo_organization for EACH ROW
       BEGIN
         CALL demo_organization_flat_pr();
       end;

       /* 创建删除触发器 */
       DROP TRIGGER if EXISTS demo_organization_flat_delete_tr;
       CREATE TRIGGER demo_organization_flat_delete_tr AFTER DELETE on demo_organization for EACH ROW
       BEGIN
         CALL demo_organization_flat_pr();
       end;
   -->    
    <!-- 特殊类型字段，如枚举 -->
    <!-- <column name="status" javaType="com.mycompany.biz.enums.StatusEnum"/> -->

    <sql id="getOrganizationPageListOrderBy">
        a.update_time desc, a.create_time desc
    </sql>
    <sql id="getOrganizationsByOrgIdsOrderBy">
        a.update_time desc, a.create_time desc
    </sql>

    <!-- 引用 demo_organization.xml.xhtml ,表修改后，需重新执行 gen.sh table demo_organization -e -->
    &ORGANIZATION;
    <!-- 引用 demo_organization.xml.xhtml 结束 -->

    <!-- 自定义方法请写在下面 需要自动提示，请将dalgenX目录下的 gen.schemas-1.0.dtd 配到 eclipse 或 idea中
      file:gen.schemas-1.0.dtd
      System Id
      https://github.com/stategen/dalgenx/blob/master/gen.schemas-1.0.dtd
    -->
    <!--
    <operation name="..." remarks="">
        <sql>
            ...
        </sql>
    </operation>
    -->

</table>
