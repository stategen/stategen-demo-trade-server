<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 本文件由dalgen生成，任何在本文件上的手工修改将会在下次生成时被覆盖 -->
<sqlMap>


    <resultMap id="AdvertisePicture.trade.RM" class="com.mycompany.biz.domain.AdvertisePicture">
        <result property="advertiseId" column="advertise_id" javaType="java.lang.Long" jdbcType="BIGINT"  />
        <result property="pictureAddress" column="PICTURE_ADDRESS" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="toPlace" column="TO_PLACE" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="urlType" column="url_type" javaType="java.lang.Integer" jdbcType="INTEGER"  />
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="updateTime" column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="deleteFlag" column="delete_flag" javaType="java.lang.Integer" jdbcType="INTEGER"  />
    </resultMap>
    
	<sql id="getAdvertisePicturePageListOrderBy">
		a.update_time desc, a.create_time desc
	</sql>
		
	<sql id="getAdvertisePicturesByAdvertiseIdsOrderBy">
		a.update_time desc, a.create_time desc
	</sql>
		

	
	
    
	<insert id="insert.AdvertisePicture.trade">
		insert into demo_advertise_picture (
            create_time
            , update_time
            , delete_flag
            <isNotNull prepend="," property="advertiseId"> advertise_id </isNotNull>
            <isNotNull prepend="," property="pictureAddress"> PICTURE_ADDRESS </isNotNull>
            <isNotNull prepend="," property="toPlace"> TO_PLACE </isNotNull>
            <isNotNull prepend="," property="urlType"> url_type </isNotNull>
            ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0 
            <isNotNull prepend="," property="advertiseId"> #advertiseId# </isNotNull> 
            <isNotNull prepend="," property="pictureAddress"> #pictureAddress# </isNotNull> 
            <isNotNull prepend="," property="toPlace"> #toPlace# </isNotNull> 
            <isNotNull prepend="," property="urlType"> #urlType# </isNotNull>)
            <selectKey keyProperty="advertiseId" resultClass="long">
                select  LAST_INSERT_ID()
            </selectKey>
	</insert>
	
	<update id="delete.AdvertisePicture.trade">
		UPDATE demo_advertise_picture SET
            delete_flag = 1
            , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            and advertise_id = #advertiseId#
	</update>
	
    
	
	<update id="update.AdvertisePicture.trade">
		UPDATE demo_advertise_picture
            SET update_time= CURRENT_TIMESTAMP(6)
            <dynamic>
                <isNotNull prepend="," property="pictureAddress">
                    PICTURE_ADDRESS =  #pictureAddress# 
                </isNotNull>
                <isNotNull prepend="," property="toPlace">
                    TO_PLACE =  #toPlace# 
                </isNotNull>
                <isNotNull prepend="," property="urlType">
                    url_type =  #urlType# 
                </isNotNull>
            </dynamic>
            where
            delete_flag = 0
            and advertise_id = #advertiseId#
	</update>
	
    
	
	<select id="getAdvertisePictureByAdvertiseId.AdvertisePicture.trade" resultMap="AdvertisePicture.trade.RM" >
    	select
 /* getAdvertisePictureByAdvertiseId.AdvertisePicture.trade */             a.advertise_id,
            a.PICTURE_ADDRESS,
            a.TO_PLACE,
            a.url_type,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_advertise_picture a
            where
            a.delete_flag = 0
            and a.advertise_id = #advertiseId#
	</select>	

	    
	
	
    
	
	<select id="getPageList.AdvertisePicture.trade" resultMap="AdvertisePicture.trade.RM" >
    	select
 /* getPageList.AdvertisePicture.trade */             a.advertise_id,
            a.PICTURE_ADDRESS,
            a.TO_PLACE,
            a.url_type,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_advertise_picture a
            where
            a.delete_flag = 0
            <isNotNull open="and" property="advertiseId">
               a.advertise_id=#advertiseId#
            </isNotNull>
            <isNotEmpty open="and" property="advertiseIds">
                a.advertise_id in
                <iterate close=")" conjunction="," open="(" property="advertiseIds">
                    #advertiseIds[]#
                </iterate>
            </isNotEmpty>
          <isNotNull open="and" property="pictureAddress">
            a.PICTURE_ADDRESS=#pictureAddress#
          </isNotNull>
            <isNotEmpty open="and" property="pictureAddressLike">
                a.PICTURE_ADDRESS like CONCAT('%',#pictureAddressLike#,'%')
            </isNotEmpty>
          <isNotNull open="and" property="toPlace">
            a.TO_PLACE=#toPlace#
          </isNotNull>
            <isNotEmpty open="and" property="toPlaceLike">
                a.TO_PLACE like CONCAT('%',#toPlaceLike#,'%')
            </isNotEmpty>
            <isNotNull open="and" property="urlType">
               a.url_type=#urlType#
            </isNotNull>
            <isNotEmpty open="and" property="urlTypes">
                a.url_type in
                <iterate close=")" conjunction="," open="(" property="urlTypes">
                    #urlTypes[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isNull property="advertiseId">
            <isEmpty property="advertiseIds">
            <isNull property="pictureAddress">
            <isEmpty property="pictureAddressLike">
            <isNull property="toPlace">
            <isEmpty property="toPlaceLike">
            <isNull property="urlType">
            <isEmpty property="urlTypes">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            order by
            <include refid="getAdvertisePicturePageListOrderBy"/>
			limit #offset#,#limit#
	</select>	

	<select id="getPageList.AdvertisePicture.trade.count" resultClass="long" >
    	select  /* getPageList.AdvertisePicture.trade.count */ count(*)  from demo_advertise_picture a
            where
            a.delete_flag = 0
            <isNotNull open="and" property="advertiseId">
               a.advertise_id=#advertiseId#
            </isNotNull>
            <isNotEmpty open="and" property="advertiseIds">
                a.advertise_id in
                <iterate close=")" conjunction="," open="(" property="advertiseIds">
                    #advertiseIds[]#
                </iterate>
            </isNotEmpty>
          <isNotNull open="and" property="pictureAddress">
            a.PICTURE_ADDRESS=#pictureAddress#
          </isNotNull>
            <isNotEmpty open="and" property="pictureAddressLike">
                a.PICTURE_ADDRESS like CONCAT('%',#pictureAddressLike#,'%')
            </isNotEmpty>
          <isNotNull open="and" property="toPlace">
            a.TO_PLACE=#toPlace#
          </isNotNull>
            <isNotEmpty open="and" property="toPlaceLike">
                a.TO_PLACE like CONCAT('%',#toPlaceLike#,'%')
            </isNotEmpty>
            <isNotNull open="and" property="urlType">
               a.url_type=#urlType#
            </isNotNull>
            <isNotEmpty open="and" property="urlTypes">
                a.url_type in
                <iterate close=")" conjunction="," open="(" property="urlTypes">
                    #urlTypes[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isNull property="advertiseId">
            <isEmpty property="advertiseIds">
            <isNull property="pictureAddress">
            <isEmpty property="pictureAddressLike">
            <isNull property="toPlace">
            <isEmpty property="toPlaceLike">
            <isNull property="urlType">
            <isEmpty property="urlTypes">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
	</select>
	    
	
	
    
	
	<select id="getAdvertisePicturesByAdvertiseIds.AdvertisePicture.trade" resultMap="AdvertisePicture.trade.RM" >
    	select
 /* getAdvertisePicturesByAdvertiseIds.AdvertisePicture.trade */             a.advertise_id,
            a.PICTURE_ADDRESS,
            a.TO_PLACE,
            a.url_type,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_advertise_picture a
            where
            a.delete_flag = 0
            <isEmpty open="and" property="advertiseIds">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="advertiseIds">
                a.advertise_id in
                <iterate close=")" conjunction="," open="(" property="advertiseIds">
                    #advertiseIds[]#
                </iterate>
            </isNotEmpty>
            order by
            <include refid="getAdvertisePicturesByAdvertiseIdsOrderBy"/>
	</select>	

	    
	
	
    
	
	<update id="deleteByAdvertiseIds.AdvertisePicture.trade">
		UPDATE demo_advertise_picture SET
               delete_flag = 1
               , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            <isEmpty open="and" property="advertiseIds">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="advertiseIds">
                advertise_id in
                <iterate close=")" conjunction="," open="(" property="advertiseIds">
                    #advertiseIds[]#
                </iterate>
            </isNotEmpty>
	</update>
	
    

</sqlMap>

