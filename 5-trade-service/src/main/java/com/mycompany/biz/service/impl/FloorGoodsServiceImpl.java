/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.IIdGenerator;
import org.stategen.framework.lite.IdGenerateService;
import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.FloorGoodsDao;
import com.mycompany.biz.domain.FloorGoods;
import com.mycompany.biz.service.FloorGoodsService;

/**
 * FloorGoodsServiceImpl
 * <pre>
 * database table: floor_goods
 * database table comments: FloorGoods
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class FloorGoodsServiceImpl implements FloorGoodsService, IdGenerateService<String> {

    @Resource
    private IIdGenerator idGenerator;

    @Resource(name = "floorGoodsDao")
    FloorGoodsDao floorGoodsDao;

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#insert
     * @see com.mycompany.biz.service.FloorGoodsService#insert
     */
    @Override
    public FloorGoods insert(FloorGoods floorGoods) {
        return floorGoodsDao.insert(floorGoods, this);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#delete
     * @see com.mycompany.biz.service.FloorGoodsService#delete
     */
    @Override
    public String delete(String floorGoodsId) {
        return floorGoodsDao.delete(floorGoodsId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#update
     * @see com.mycompany.biz.service.FloorGoodsService#update
     */
    @Override
    public FloorGoods update(FloorGoods floorGoods) {
        return floorGoodsDao.update(floorGoods);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#getFloorGoodsByFloorGoodsId
     * @see com.mycompany.biz.service.FloorGoodsService#getFloorGoodsByFloorGoodsId
     */
    @Override
    public FloorGoods getFloorGoodsByFloorGoodsId(String floorGoodsId) {
        return floorGoodsDao.getFloorGoodsByFloorGoodsId(floorGoodsId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#getPageList
     * @see com.mycompany.biz.service.FloorGoodsService#getPageList
     */
    @Override
    public PageList<FloorGoods> getPageList(FloorGoods floorGoods, int pageSize, int pageNum) {
        return floorGoodsDao.getPageList(floorGoods, pageSize, pageNum);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#getFloorGoodssByFloorGoodsIds
     * @see com.mycompany.biz.service.FloorGoodsService#getFloorGoodssByFloorGoodsIds
     */
    @Override
    public List<FloorGoods> getFloorGoodssByFloorGoodsIds(java.util.List<String> floorGoodsIds) {
        return floorGoodsDao.getFloorGoodssByFloorGoodsIds(floorGoodsIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.FloorGoodsDao#deleteByFloorGoodsIds
     * @see com.mycompany.biz.service.FloorGoodsService#deleteByFloorGoodsIds
     */
    @Override
    public java.util.List<String> deleteByFloorGoodsIds(java.util.List<String> floorGoodsIds) {
        return floorGoodsDao.deleteByFloorGoodsIds(floorGoodsIds);
    }

    /*** 保存floorGoods,有id时更新，没有id时插入,并带回新的id，返回 floorGoods*/
    @Override
    public FloorGoods saveFloorGoods(FloorGoods floorGoods) {
        if (floorGoods != null) {
            java.lang.String floorGoodsId = floorGoods.getFloorGoodsId();
            if (StringUtil.isBlank(floorGoodsId)) {
                insert(floorGoods);
            } else {
                update(floorGoods);
            }
        }
        return floorGoods;
    }

    /*** 批量保存floorGoodss,有id时更新，没有id时插入,并带回新的id，返回 floorGoodss*/
    @Override
    public List<FloorGoods> saveFloorGoodss(List<FloorGoods> floorGoodss) {
        for (FloorGoods floorGoods : floorGoodss) {
            this.saveFloorGoods(floorGoods);
        }
        return floorGoodss;
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, FloorGoods> destSetMethod) {
        ServiceUtil.interalAssignBeanTo(dests, destGetMethod, destSetMethod, this, FloorGoodsServiceImpl::getFloorGoodssByFloorGoodsIds, FloorGoods::getFloorGoodsId);
    }

    @Override
    public <D, G> void assignBeansTo(Collection<D> dests, Function<? super D, G> destGetMethod, BiConsumer<D, List<FloorGoods>> destSetMethod, BiConsumer<FloorGoods, List<G>> resultSetQueryIdsFun, Function<? super FloorGoods, G> resultGetGoupIdFun) {
        ServiceUtil.interalAssignBeansTo(dests, destGetMethod, destSetMethod, this, new FloorGoods(), resultSetQueryIdsFun, resultGetGoupIdFun, 100);
    }

    @Override
    public <D> void mergeBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod) {
        ServiceUtil.interalMergeBeanTo(dests, destGetMethod, this, FloorGoodsServiceImpl::getFloorGoodssByFloorGoodsIds, FloorGoods::getFloorGoodsId);
    }

    @Override
    public <T> String generateId(Class<T> bizTagClz) {
        return this.idGenerator.generateId(String.class, bizTagClz);
    }
}
