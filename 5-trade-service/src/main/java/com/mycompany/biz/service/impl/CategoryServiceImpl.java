/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.Collection;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.IIDGenerator;
import org.stategen.framework.util.ServiceUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.CategoryDao;
import com.mycompany.biz.domain.Category;
import com.mycompany.biz.service.CategoryService;

/**
 * CategoryServiceImpl
 * <pre>
 * database table: category
 * database table comments: Category
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class CategoryServiceImpl implements CategoryService, IIDGenerator<String> {

    @Resource(name = "categoryDao")
    CategoryDao categoryDao;

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#insert
     * @see com.mycompany.biz.service.CategoryService#insert
     */
    @Override
    public Category insert(Category category) {
        return categoryDao.insert(category, this);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#delete
     * @see com.mycompany.biz.service.CategoryService#delete
     */
    @Override
    public String delete(String mallCategoryId) {
        return categoryDao.delete(mallCategoryId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#update
     * @see com.mycompany.biz.service.CategoryService#update
     */
    @Override
    public Category update(Category category) {
        return categoryDao.update(category);
    }

    /*** 保存category,有id时更新，没有id时插入,并带回新的id，返回 category*/
    @Override
    public Category saveCategory(Category category) {
        if (category != null) {
            java.lang.String mallCategoryId = category.getCategoryId();
            if (StringUtil.isBlank(mallCategoryId)) {
                insert(category);
            } else {
                update(category);
            }
        }
        return category;
    }

    /*** 批量保存categorys,有id时更新，没有id时插入,并带回新的id，返回 categorys*/
    @Override
    public List<Category> saveCategorys(List<Category> categorys) {
        for (Category category : categorys) {
            this.saveCategory(category);
        }
        return categorys;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#getPageList
     * @see com.mycompany.biz.service.CategoryService#getPageList
     */
    @Override
    public PageList<Category> getPageList(Category category, int pageSize, int pageNum) {
        return categoryDao.getPageList(category, pageSize, pageNum);
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, Category> destSetMethod) {
        ServiceUtil.interalAssignBeanTo(dests, destGetMethod, destSetMethod, this, CategoryServiceImpl::getCategorysByCategoryIds, Category::getCategoryId);
    }

    @Override
    public <D, G> void assignBeansTo(Collection<D> dests, Function<? super D, G> destGetMethod, BiConsumer<D, List<Category>> destSetMethod, BiConsumer<Category, List<G>> resultSetQueryIdsFun, Function<? super Category, G> resultGetGoupIdFun) {
        ServiceUtil.interalAssignBeansTo(dests, destGetMethod, destSetMethod, this, new Category(), resultSetQueryIdsFun, resultGetGoupIdFun, 100);
    }

    @Override
    public <D> void mergeBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod) {
        ServiceUtil.interalMergeBeanTo(dests, destGetMethod, this, CategoryServiceImpl::getCategorysByCategoryIds, Category::getCategoryId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#getCategoryByCategoryId
     * @see com.mycompany.biz.service.CategoryService#getCategoryByCategoryId
     */
    @Override
    public Category getCategoryByCategoryId(String categoryId) {
        return categoryDao.getCategoryByCategoryId(categoryId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#getCategorysByCategoryIds
     * @see com.mycompany.biz.service.CategoryService#getCategorysByCategoryIds
     */
    @Override
    public List<Category> getCategorysByCategoryIds(java.util.List<String> categoryIds) {
        return categoryDao.getCategorysByCategoryIds(categoryIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CategoryDao#deleteByCategoryIds
     * @see com.mycompany.biz.service.CategoryService#deleteByCategoryIds
     */
    @Override
    public java.util.List<String> deleteByCategoryIds(java.util.List<String> categoryIds) {
        return categoryDao.deleteByCategoryIds(categoryIds);
    }

    @Override
    public String generateId() {
        //TODO generate id;
        return null;
    }
}
