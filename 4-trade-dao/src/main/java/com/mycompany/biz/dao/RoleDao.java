/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.dao;

import java.util.List;

import com.mycompany.biz.domain.Role;
import org.springframework.dao.DataAccessException;
import org.stategen.framework.lite.PageList;
import org.stategen.framework.lite.IdGenerateService;

/**
 * RoleDao
 * @author StageGen.org
 * <pre>
 * database table: role
 * database table comments: Role
 * This file is generated by <tt>dalgenx</tt>, a DAL (Data Access Layer)
 *
 * 该类仅可以修改引用
 * </pre>
 */
public interface RoleDao {

	/**
    <pre>
    &#64;ApiParam() &#64;RequestParam(required = false) String roleId,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleName,
    &#64;ApiParam() &#64;RequestParam(required = false) String description,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleType
    ,&#64;ApiParam(hidden = true) Role role
    
    </pre>
	 * 
	 * sql:insert into role ( create_time , update_time , delete_flag , role_id , role_name , description , role_type ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0,?,?,?,?)
	 */
	public Role insert(Role role, IdGenerateService<String> idGenerateService) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("角色ID") &#64;RequestParam(required = false) String roleId    
    </pre>
	 * 
	 * sql:UPDATE role a SET a.delete_flag = 1 , a.update_time = CURRENT_TIMESTAMP(6) where a.delete_flag = 0 and a.role_id = ?
	 */
	public String delete(String roleId) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam() &#64;RequestParam(required = false) String roleName,
    &#64;ApiParam() &#64;RequestParam(required = false) String description,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleType,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleId
    ,&#64;ApiParam(hidden = true) Role role
    
    </pre>
	 * 
	 * sql:UPDATE role a SET a.update_time= CURRENT_TIMESTAMP(6) , a.role_name = ? , a.description = ? , a.role_type = ? where a.delete_flag = 0 and a.role_id = ?
	 */
	public Role update(Role role) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("角色ID") &#64;RequestParam(required = false) String roleId    
    </pre>
	 * 
	 * sql:select a.role_id, a.role_name, a.description, a.create_time, a.update_time, a.delete_flag, a.role_type from role a where a.delete_flag = 0 and a.role_id = ?
	 */
	public Role getRoleByRoleId(String roleId) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam() &#64;RequestParam(required = false) String roleId,
    &#64;ApiParam() &#64;RequestParam(required = false, name="roleIds") ArrayList&lt;String&gt; roleIds,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleName,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleNameLike,
    &#64;ApiParam() &#64;RequestParam(required = false) String description,
    &#64;ApiParam() &#64;RequestParam(required = false) String descriptionLike,
    &#64;ApiParam() &#64;RequestParam(required = false) Date createTimeMin,
    &#64;ApiParam() &#64;RequestParam(required = false) Date createTimeMax,
    &#64;ApiParam() &#64;RequestParam(required = false) Date updateTimeMin,
    &#64;ApiParam() &#64;RequestParam(required = false) Date updateTimeMax,
    &#64;ApiParam() &#64;RequestParam(required = false) String roleType,
    &#64;ApiParam() &#64;RequestParam(required = false, name="roleTypes") ArrayList&lt;String&gt; roleTypes
    ,&#64;ApiParam(hidden = true) Role role
    ,Pagination pagination
    </pre>
	 * 
	 * sql:select a.role_id, a.role_name, a.description, a.create_time, a.update_time, a.delete_flag, a.role_type from role a where a.delete_flag = 0 and a.role_id=? and a.role_id in ( ? ) and a.role_name=? and a.role_name like CONCAT('%',?,'%') and a.description=? and a.description like CONCAT('%',?,'%') and a.create_time >=? and a.create_time <? and a.update_time >=? and a.update_time <? and a.role_type=? and a.role_type in ( ? ) and 0 = 1 order by a.update_time desc, a.create_time desc
	 */
	public PageList<Role> getPageList(Role role, int pageSize, int pageNum) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("角色ID") &#64;RequestParam(required = false, name="roleIds") ArrayList&lt;String&gt; roleIds    
    </pre>
	 * 
	 * sql:select a.role_id, a.role_name, a.description, a.create_time, a.update_time, a.delete_flag, a.role_type from role a where a.delete_flag = 0 and 1=0 and a.role_id in ( ? ) order by a.update_time desc, a.create_time desc
	 */
	public List<Role> getRolesByRoleIds(java.util.List<String> roleIds) throws DataAccessException;
	
	/**
    <pre>
    &#64;ApiParam("角色ID") &#64;RequestParam(required = false, name="roleIds") ArrayList&lt;String&gt; roleIds    
    </pre>
	 * 
	 * sql:UPDATE role a SET a.delete_flag = 1 , a.update_time = CURRENT_TIMESTAMP(6) where a.delete_flag = 0 and 1=0 and a.role_id in ( ? )
	 */
	public java.util.List<String> deleteByRoleIds(java.util.List<String> roleIds) throws DataAccessException;
	

}



