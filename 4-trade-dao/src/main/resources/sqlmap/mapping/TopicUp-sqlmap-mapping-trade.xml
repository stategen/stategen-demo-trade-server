<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 本文件由dalgen生成，任何在本文件上的手工修改将会在下次生成时被覆盖 -->
<sqlMap>


    <resultMap id="TopicUp.trade.RM" class="com.mycompany.biz.domain.TopicUp">
        <result property="upId" column="up_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="objectId" column="object_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="authorId" column="author_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="updateTime" column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="deleteFlag" column="delete_flag" javaType="java.lang.Integer" jdbcType="INTEGER"  />
    </resultMap>
    
	<sql id="getTopicUpPageListOrderBy">
		a.update_time desc, a.create_time desc
	</sql>
		
	<sql id="getTopicUpsByUpIdsOrderBy">
		a.update_time desc, a.create_time desc
	</sql>
		

	
	
    
	<insert id="insert.TopicUp.trade">
		insert into demo_topic_up (
            create_time
            , update_time
            , delete_flag
            <isNotNull prepend="," property="upId"> up_id </isNotNull>
            <isNotNull prepend="," property="objectId"> object_id </isNotNull>
            <isNotNull prepend="," property="authorId"> author_id </isNotNull>
            ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0 
            <isNotNull prepend="," property="upId"> #upId# </isNotNull> 
            <isNotNull prepend="," property="objectId"> #objectId# </isNotNull> 
            <isNotNull prepend="," property="authorId"> #authorId# </isNotNull>)
            <selectKey keyProperty="upId" resultClass="String" type="pre">
                select if((#upId#  is null) ,CONCAT(DATE_FORMAT(CURRENT_TIMESTAMP(6),'%Y%m%d%H%i%s%f'),LPAD(ROUND(RAND()*100000000),8,'0')) ,#upId# ) as upId
            </selectKey>
	</insert>
	
	<update id="delete.TopicUp.trade">
		UPDATE demo_topic_up SET
            delete_flag = 1
            , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            and up_id = #upId#
	</update>
	
    
	
	<update id="update.TopicUp.trade">
		UPDATE demo_topic_up
            SET update_time= CURRENT_TIMESTAMP(6)
            <dynamic>
                <isNotNull prepend="," property="objectId">
                    object_id =  #objectId# 
                </isNotNull>
                <isNotNull prepend="," property="authorId">
                    author_id =  #authorId# 
                </isNotNull>
            </dynamic>
            where
            delete_flag = 0
            and up_id = #upId#
	</update>
	
    
	
	<select id="getTopicUpByUpId.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getTopicUpByUpId.TopicUp.trade */             a.up_id,
            a.object_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_topic_up a
            where
            a.delete_flag = 0
            and a.up_id = #upId#
	</select>	

	    
	
	
    
	
	<select id="getPageList.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getPageList.TopicUp.trade */             a.up_id,
            a.object_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_topic_up a
            where
            a.delete_flag = 0
            <isNotNull open="and" property="upId">
               a.up_id=#upId#
            </isNotNull>
            <isNotEmpty open="and" property="upIds">
                a.up_id in
                <iterate close=")" conjunction="," open="(" property="upIds">
                    #upIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="objectId">
               a.object_id=#objectId#
            </isNotNull>
            <isNotEmpty open="and" property="objectIds">
                a.object_id in
                <iterate close=")" conjunction="," open="(" property="objectIds">
                    #objectIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="authorId">
               a.author_id=#authorId#
            </isNotNull>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isNull property="upId">
            <isEmpty property="upIds">
            <isNull property="objectId">
            <isEmpty property="objectIds">
            <isNull property="authorId">
            <isEmpty property="authorIds">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            order by
            <include refid="getTopicUpPageListOrderBy"/>
			limit #offset#,#limit#
	</select>	

	<select id="getPageList.TopicUp.trade.count" resultClass="long" >
    	select  /* getPageList.TopicUp.trade.count */ count(*)  from demo_topic_up a
            where
            a.delete_flag = 0
            <isNotNull open="and" property="upId">
               a.up_id=#upId#
            </isNotNull>
            <isNotEmpty open="and" property="upIds">
                a.up_id in
                <iterate close=")" conjunction="," open="(" property="upIds">
                    #upIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="objectId">
               a.object_id=#objectId#
            </isNotNull>
            <isNotEmpty open="and" property="objectIds">
                a.object_id in
                <iterate close=")" conjunction="," open="(" property="objectIds">
                    #objectIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="authorId">
               a.author_id=#authorId#
            </isNotNull>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isNull property="upId">
            <isEmpty property="upIds">
            <isNull property="objectId">
            <isEmpty property="objectIds">
            <isNull property="authorId">
            <isEmpty property="authorIds">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
            </isEmpty>
            </isNull>
	</select>
	    
	
	
    
	
	<select id="getTopicUpsByUpIds.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getTopicUpsByUpIds.TopicUp.trade */             a.up_id,
            a.object_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_topic_up a
            where
            a.delete_flag = 0
            <isEmpty open="and" property="upIds">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="upIds">
                a.up_id in
                <iterate close=")" conjunction="," open="(" property="upIds">
                    #upIds[]#
                </iterate>
            </isNotEmpty>
            order by
            <include refid="getTopicUpsByUpIdsOrderBy"/>
	</select>	

	    
	
	
    
	
	<update id="deleteByUpIds.TopicUp.trade">
		UPDATE demo_topic_up SET
               delete_flag = 1
               , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            <isEmpty open="and" property="upIds">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="upIds">
                up_id in
                <iterate close=")" conjunction="," open="(" property="upIds">
                    #upIds[]#
                </iterate>
            </isNotEmpty>
	</update>
	
    
    <resultMap id="getTopicUpsGroupCountByTopicIds.object.trade.RM" class="com.mycompany.biz.domain.TopicUp">
        <result property="objectId" column="object_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="upCount" column="upCount" javaType="java.lang.Long" jdbcType="BIGINT"  />
    </resultMap>
	
	<select id="getTopicUpsGroupCountByTopicIds.TopicUp.trade" resultMap="getTopicUpsGroupCountByTopicIds.object.trade.RM" >
    	SELECT
 /* getTopicUpsGroupCountByTopicIds.TopicUp.trade */             tu.object_id,
            COUNT(*) AS upCount
            FROM
            demo_topic_up tu
            LEFT JOIN demo_topic_reply tr ON tr.reply_id = tu.object_id
            WHERE
            tu.delete_flag=0
            and tr.delete_flag=0
            <isNotEmpty property="objectIds">
                and tu.object_id in
                <iterate close=")" conjunction="," open="(" property="objectIds">
                    #objectIds[]#
                </iterate>
            </isNotEmpty>
            <isEmpty property="objectIds">
              and 1=0
            </isEmpty>
            <isNotEmpty property="authorId">
                and tu.author_id =#authorId#
            </isNotEmpty>
            GROUP BY
            tu.object_id
	</select>	

	    
	
	
    
	
	<select id="getTopicUpByObjectIdAndAuthorId.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getTopicUpByObjectIdAndAuthorId.TopicUp.trade */             a.up_id,
            a.object_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from demo_topic_up a
            where
            a.delete_flag = 0
            and a.object_id=#objectId#
            and a.author_id=#authorId#
	</select>	

	    
	
	
    

</sqlMap>

