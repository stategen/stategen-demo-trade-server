/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.domain;

import java.text.SimpleDateFormat;

import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Max;
import org.stategen.framework.annotation.OptionConvertor;

import com.alibaba.fastjson.annotation.JSONField;
import io.swagger.annotations.ApiModelProperty;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.experimental.Accessors;

/**
 * FileSummary
 * <pre>
 * database table: file_summary
 * database table comments: FileSummary
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 该类仅不可以修改dalgen生成的属生(field)类型 ,方法(Method)返回值类型和参数类型
 * 不建议使@Data,其hashCode有问题
 * </pre>
 */
@Getter
@Setter
@NoArgsConstructor
@Accessors(chain = true)
@OptionConvertor(value = "fileId")
@AllArgsConstructor
public class FileSummary implements java.io.Serializable {

    private static final long serialVersionUID = -5216457518046898601L;

    /***fileId   db_column: file_id VARCHAR */
    @ApiModelProperty("fileId")
    @Id
    @Max(64)
    private String fileId;

    /***url   db_column: url VARCHAR */
    @ApiModelProperty("url")
    @Max(255)
    private String url;

    /***size   db_column: size BIGINT */
    @ApiModelProperty("size")
    private Long size;

    /***name   db_column: name VARCHAR */
    @ApiModelProperty("name")
    @Max(128)
    private String name;

    /***type   db_column: type VARCHAR */
    @ApiModelProperty("type")
    @Max(64)
    private String type;

    /***userId   db_column: user_id VARCHAR */
    @ApiModelProperty("userId")
    @Max(64)
    private String userId;

    /***创建时间   db_column: create_time TIMESTAMP */
    @ApiModelProperty(value = "创建时间", hidden = true)
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date createTime;

    /***更新时间   db_column: update_time TIMESTAMP */
    @ApiModelProperty(value = "更新时间", hidden = true)
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date updateTime;

    /***是否删除 (0:正常，1删除)   db_column: delete_flag INTEGER */
    @ApiModelProperty(value = "是否删除 (0:正常，1删除)", hidden = true)
    private Integer deleteFlag;

    /*----------------getter & setter ignore by lombok -------------------*/
    public String toString() {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd H:m:ss.SSS");
        StringBuffer sb = new StringBuffer(1024);
        sb.append('{');
        sb.append("fileIds=").append(fileIds).append('\n');
        sb.append("sizeMin=").append(sizeMin).append('\n');
        sb.append("sizeMax=").append(sizeMax).append('\n');
        sb.append("nameLike=").append(nameLike).append('\n');
        sb.append("types=").append(types).append('\n');
        sb.append("userIds=").append(userIds).append('\n');
        sb.append("createTimeMin=").append(createTimeMin != null ? df.format(createTimeMin) : null).append('\n');
        sb.append("createTimeMax=").append(createTimeMax != null ? df.format(createTimeMax) : null).append('\n');
        sb.append("updateTimeMin=").append(updateTimeMin != null ? df.format(updateTimeMin) : null).append('\n');
        sb.append("updateTimeMax=").append(updateTimeMax != null ? df.format(updateTimeMax) : null).append('\n');
        sb.append("fileId=").append(fileId).append('\n');
        sb.append("url=").append(url).append('\n');
        sb.append("size=").append(size).append('\n');
        sb.append("name=").append(name).append('\n');
        sb.append("type=").append(type).append('\n');
        sb.append("userId=").append(userId).append('\n');
        sb.append("createTime=").append(createTime != null ? df.format(createTime) : null).append('\n');
        sb.append("updateTime=").append(updateTime != null ? df.format(updateTime) : null).append('\n');
        sb.append("deleteFlag=").append(deleteFlag);
        sb.append('}');
        return sb.toString();
    }

    /*** fileIds in getPageList */
    @ApiModelProperty("fileId s")
    @JSONField(serialize = false)
    private java.util.List<String> fileIds;

    /*** sizeMin in getPageList */
    @ApiModelProperty("sizeMin")
    @JSONField(serialize = false)
    private Long sizeMin;

    /*** sizeMax in getPageList */
    @ApiModelProperty("sizeMax")
    @JSONField(serialize = false)
    private Long sizeMax;

    /*** nameLike in getPageList */
    @ApiModelProperty("nameLike")
    @JSONField(serialize = false)
    private String nameLike;

    /*** types in getPageList */
    @ApiModelProperty("type s")
    @JSONField(serialize = false)
    private java.util.List<String> types;

    /*** userIds in getPageList */
    @ApiModelProperty("userId s")
    @JSONField(serialize = false)
    private java.util.List<String> userIds;

    /*** 创建时间Min in getPageList */
    @ApiModelProperty("创建时间Min")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date createTimeMin;

    /*** 创建时间Max in getPageList */
    @ApiModelProperty("创建时间Max")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date createTimeMax;

    /*** 更新时间Min in getPageList */
    @ApiModelProperty("更新时间Min")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date updateTimeMin;

    /*** 更新时间Max in getPageList */
    @ApiModelProperty("更新时间Max")
    @Temporal(TemporalType.TIMESTAMP)
    @JSONField(serialize = false)
    private java.util.Date updateTimeMax;

    public String getUid() {
        return this.getFileId();
    }

    public void setUid(String uid) {
        this.setFileId(uid);
    }
}
